from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn import model_selection
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix,classification_report
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("winequality-red.csv")
data.head()

data['quality'] = data['quality'].map({3:'bad',4:'bad',5:'bad',6:'good',7:'good',8:'good'})
data['quality'].value_counts()

le = LabelEncoder()
data['quality'] = le.fit_transform(data['quality'])
data['quality'].value_counts()

x = data.iloc[:,:11]
y = data.iloc[:,11]
print(x.shape)
print(y.shape)

xtrain,xtest,ytrain,ytest = model_selection.train_test_split(x,y,test_size = 0.25,random_state = 44)
print (xtrain.shape)
print (ytrain.shape)
print (xtest.shape)
print (ytest.shape)

sc=StandardScaler()
xtrain = sc.fit_transform(xtrain)
xtest = sc.fit_transform(xtest)

model = LogisticRegression()
model.fit(xtrain, ytrain)
y_pred = model.predict(xtest)
print("Training accuracy:", model.score(xtrain, ytrain))
print("Testing accuracy:", model.score(xtest, ytest))
print(classification_report(ytest, y_pred))
print(confusion_matrix(ytest, y_pred))